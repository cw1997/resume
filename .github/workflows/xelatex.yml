name: Build LaTeX and Release PDF

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    container: texlive/texlive:latest-full
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: true # keep permission for adding tag

    - name: Install fonts
      run: |
        apt update
        apt install fonts-noto-cjk fonts-noto-cjk-extra

    - name: Compile LaTeX with XeLaTeX
      run: |
        mkdir ./dist
        xelatex -interaction=nonstopmode -output-directory=./dist main.tex
        # Compile twice to ensure the correct cross-references and contents
        xelatex -interaction=nonstopmode -output-directory=./dist main.tex
        mv ./dist/main.pdf ./changwei-resume.pdf

    - name: Delete old 'latest' release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repository }}
      run: |
        echo "Fetching all releases..."
        # fetch all release data
        RELEASES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$REPO/releases")

        apt install -y jq

        # fetch latest release id
        LATEST_ID=$(echo "$RELEASES" | jq -r '.[] | select(.tag_name=="latest") | .id')

        if [ -n "$LATEST_ID" ]; then
          echo "Deleting old 'latest' release (id: $LATEST_ID)..."
          curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$REPO/releases/$LATEST_ID"
          echo "Old 'latest' release deleted."

          # delete remote latest tag
          git push origin --delete latest || true
        else
          echo "No old 'latest' release found."
        fi

    - name: Upload PDF to Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: latest
        tag_name: latest
        files: |
          changwei-resume.pdf
